@using Controls.Animations
@using Controls.Animations.Background
@using Microsoft.AspNetCore.Components.Routing

@inject NavigationManager NavigationManager

<span>
    <Fade>
        <NavLink
            @onmouseover=OnMouseOver 
            @onmouseout=OnMouseOut
            ActiveClass=@activeClass
            href=@Link
            class=@CssClass
            ChildContent=ChildContent
            />
    </Fade>
</span>


@code {
    private bool isHovered;
    private string? hoveredClass, defaultClass, activeClass;
    private string? CssClass => isHovered ? hoveredClass : defaultClass;

    [CascadingParameter]
    public NavHeader? CurrentHeader { get; set; }

    [Parameter, EditorRequired]
    public RenderFragment ChildContent { get; set; }

    [Parameter, EditorRequired]
    public string? ActiveClass { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string Link { get; set; } = string.Empty;

    private void OnMouseOver() => isHovered = true;

    private void OnMouseOut() => isHovered = false;

    protected override void OnParametersSet()
    {
        hoveredClass = $"nav-item {Fade.AnimationClass} {IAnimation.ActiveClass} {Class}";
        defaultClass = $"nav-item {Fade.AnimationClass} {Class}";
        activeClass = $"selected {ActiveClass}";
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && NavigationManager.ToBaseRelativePath(NavigationManager.Uri).Equals(Link, StringComparison.InvariantCultureIgnoreCase))
        {
            CurrentHeader?.Select(true);  
        }
    }
}