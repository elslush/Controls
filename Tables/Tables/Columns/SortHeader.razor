@using Controls.Selection
@using System.Linq.Expressions
@using Controls.Data

@typeparam TGridItem
@implements ISortHeader<TGridItem>

<button class="column-title sortable" @onclick=@SelectValue>
    <span class="sort-indicator" aria-hidden="true"></span>
    <div class="title-text">@ChildContent</div>
</button>

@code {
    [CascadingParameter]
    public SingleSelectionContainer<SortHeader<TGridItem>> SortHeaderContainer { get; set; } = default!;

    [Parameter, EditorRequired] 
    public Func<IQueryable<TGridItem>, SortBy<TGridItem>>? SortBy { get; set; }

    [Parameter, EditorRequired]
    public RenderFragment? ChildContent { get; set; }

    internal IQueryable<TGridItem> GetSortedItems(IQueryable<TGridItem> source, bool ascending) =>
        SortBy(source).Apply(source, ascending);

    private Task SelectValue() => SortbyColumnContainer.AddValue(this, true);
}
