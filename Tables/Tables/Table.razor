@using Microsoft.JSInterop;
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Web.Virtualization;
@using Controls.Tables.Paging;
@using Controls.Tables.Filtering;
@using Controls.Tables.Selection;

@inject IJSRuntime JS


<div class="row">
    <div class="col">
        <TableFilter OnFilter="OnGlobalSort"></TableFilter>
    </div>
    <div class="col">
        <button type="button" class="btn btn-primary">Export</button>
        <button type="button" class="btn btn-secondary">Secondary</button>
    </div>
</div>

<div class="row" >
    <div class="col-4">
        <SelectedRows
            RowSelectState="rowSelectState"
            Columns="columns"
            SelectedColumn="@columns.FirstOrDefault()"
        ></SelectedRows>
	</div>
    <div class="col-8">
        <div class="table-container">
            <table id="@tableId" class="table table-bordered" style="width:@(@Width > 0 ? @Width : "auto")">
                <thead>
                    <tr>
                
                    </tr>
                </thead>
                <tbody>
                    @Body
                </tbody>
            </table>
        </div>
        <TablePagination
                    PaginationState="paginationState">

        </TablePagination>
    </div>
</div>

@code {
    [EditorRequired]
    [Parameter]
    public RenderFragment? Body { get; set; }

    [Parameter]
    public int Width { get; set; }

    [Parameter]
    public bool IsResizable { get; set; }

    private Guid tableId = Guid.NewGuid();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && IsResizable)
            await JS.InvokeVoidAsync("attachResizer", tableId);
    }
}
