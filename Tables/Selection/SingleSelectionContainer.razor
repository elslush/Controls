@typeparam T
@implements ISelectionContainer<T>

<CascadingValue IsFixed=true Value=this>
    @ChildContent
</CascadingValue>

@code {
    [Parameter, EditorRequired]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public T? ActiveValue { get; set; }

    [Parameter]
    public EventCallback<T?> ActiveValueChanged { get; set; }

    //public event EventHandler<T?>? OnActiveValueChanged;

    public void AddValue(T value) => ActiveValue = value;

    public void RemoveValue(T value) => ActiveValue = default(T);

    public Task Notify() => ActiveValueChanged.InvokeAsync(ActiveValue);

    public bool IsSelected(T value) => value.Equals(ActiveValue);

    public void Clear() => ActiveValue = default(T);
}
