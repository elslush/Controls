@switch (SelectionStyle)
{
    case SelectionStyle.None:
        @Content
        break;
    case SelectionStyle.Highlight:
        <a href="#" class="selectable @Class" @onclick="Click">
            @Content
        </a>
        break;
    case SelectionStyle.Radio:
        <div class="selection-group">
            <div class="selection-group-prepend">

            </div>
        </div>
        break;
}


@code {

    [Parameter]
    public bool IsClicked { get; set; }

    [Parameter]
    public RenderFragment? Content { get; set; }

    [Parameter]
    public EventCallback<bool> IsClickedChanged { get; set; }

    [Parameter]
    public SelectionStyle SelectionStyle { get; set; } = SelectionStyle.None;

    private string? Class => IsClicked ? "selected" : null;

    private Task Click()
    {
        IsClicked = !IsClicked;
        StateHasChanged();
        return IsClickedChanged.InvokeAsync(IsClicked);
    }
}
