@using Controls.Buttons;
@using Controls.Selection;

<Button Display="@Display">
    <Content>
        <Selectable 
            OnSelect="OnSelect"
            OnDeselect="OnDeselect"
            TItem="Selectable"
            Item="selectable" 
        >
            <Content>
                <span class="collapsible-btn-container">
	                <span class="collapsible-btn-content">@Content</span>
	                <span class="collapsible-btn-arrow @CollapsedArrowClass"></span>
                </span>
            </Content>
        </Selectable>
    </Content>
</Button>


@code {
    private bool isClicked = false;
    private readonly Selectable selectable = new();

    private string? CollapsedArrowClass => isClicked ? "collapsible-btn-arrow-active" : null;

    [Parameter]
    public string? Display { get; set; }

    [Parameter]
    public EventCallback<bool> OnCollapse { get; set; }

    [EditorRequired]
    [Parameter]
    public RenderFragment? Content { get; set; }

    [Parameter]
    public SelectionColors Colors { get; set; } = new();

    protected override void OnParametersSet()
    {
        selectable.SelectionColors = Colors;
    }

    private Task OnSelect()
    {
        isClicked = true;
        return OnCollapse.InvokeAsync(isClicked);
    }

    private Task OnDeselect()
    {
        isClicked = false;
        return OnCollapse.InvokeAsync(isClicked);
    }
}
