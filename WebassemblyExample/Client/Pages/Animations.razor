@using Controls.Animations
@using Controls.Animations._2D
@using Controls.Buttons
@using Controls.Code
@using Controls.CssStates
@using Controls.Lists
@using Controls.Selection
@using Controls.Tabs
@using System.Drawing
@using Microsoft.AspNetCore.Components
@using WebassemblyExample.Client.Pages.ButtonsData
@using WebassemblyExample.Client.Pages.TabsData

@page "/buttons"

<div class="inner-container container">
    <div class="inner-header header">
        <div class="inner-header-left header-left">
            <h1>Animations</h1>
            <small>Useful for a more engaging UI. Can be applied to any component that allows CSS class modification.</small>
        </div>
        <div class="header-right">
            <small>By Matthew Ormson, 01/16/2022, 3 minutes to read</small>
        </div>
    </div>

    <div class="inner-content content">
        <div class="card">
            <h2>2D Animations</h2>

            <p></p>

            <TabContainer TabType="TabType.Line">
                <Grow Context="css_class">@AnimationTab((true, css_class, "Grow"))</Grow>
            </TabContainer>
        </div>

        <div class="card">
            <h2>Custom Styling</h2>

            <p>Badge color can be specified through a <CodeBlock Mode="CodeBlock.ColorMode.Dark" Inline=true><span class="hljs-title">CssStyle</span></CodeBlock> Struct.</p>

            @*<TabContainer TabType="TabType.Line">
                
            </TabContainer>*@
        </div>

        <div class="card">
            <h2>Selection Buttons</h2>
        </div>

        <div class="card">
            <h2>Icons</h2>
        </div>

        <div class="card">
            <h2>Animations</h2>
        </div>

        <div class="card">
            <h2>Custom Content</h2>
        </div>
    </div>
</div>

@code {
    private RenderFragment<(bool, string, string)> AnimationTab = content => __builder =>
    {
        <DefaultLineTab IsDefault=content.Item1>
            <Content>
                <DefaultBasicButton class="@content.Item2">@content.Item3</DefaultBasicButton>
            </Content>
            <ChildContent>
                
                <CodeBlock Mode="CodeBlock.ColorMode.Dark">
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">@content.Item2</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                </CodeBlock>
            </ChildContent>
        </DefaultLineTab>
    };
}
